import{_ as e,o as t,c as a,d as n}from"./app-DFGfNfkv.js";const o={},r=n('<h2 id="面试题-两个栈实现一个队列。" tabindex="-1"><a class="header-anchor" href="#面试题-两个栈实现一个队列。"><span>面试题：两个栈实现一个队列。</span></a></h2><h2 id="面试题-给一个出栈序列长度为-n-有多少种入栈的可能。" tabindex="-1"><a class="header-anchor" href="#面试题-给一个出栈序列长度为-n-有多少种入栈的可能。"><span>面试题：给一个出栈序列长度为 n，有多少种入栈的可能。</span></a></h2><h2 id="把数组元素按照正负序重排列" tabindex="-1"><a class="header-anchor" href="#把数组元素按照正负序重排列"><span>把数组元素按照正负序重排列</span></a></h2><p>给定一个数组，数组它按照下面的规则重排列后的数组： 1. 数组中的正负数相互间隔 2. 符号相同的数字相对顺序不变 3. 如果某种符号的数字多余，放到数组最后</p><p>例如：-1,3,2,4,5,-6,7,-9</p><p>重排列后：3,-1,2,-6,4,-9,5,7</p><p>空间复杂度要求 O(1)</p><p>算法不是很难，主要是空间复杂度要求为 1，但是时间复杂度不限，所以想的解法时间复 杂度有点大，一直不敢下笔，最后问了下面试官，面试官说就试试吧，写完提交后面试官 说 ok</p>',8),i=[r];function c(s,l){return t(),a("div",null,i)}const d=e(o,[["render",c],["__file","index.html.vue"]]),m=JSON.parse(`{"path":"/notes/algo/89orgtxn/","title":"栈","lang":"zh-CN","frontmatter":{"title":"栈","author":"yirufeng","createTime":"2024/05/12 09:58:29","permalink":"/notes/algo/89orgtxn/","description":"面试题：两个栈实现一个队列。 面试题：给一个出栈序列长度为 n，有多少种入栈的可能。 把数组元素按照正负序重排列 给定一个数组，数组它按照下面的规则重排列后的数组： 1. 数组中的正负数相互间隔 2. 符号相同的数字相对顺序不变 3. 如果某种符号的数字多余，放到数组最后 例如：-1,3,2,4,5,-6,7,-9 重排列后：3,-1,2,-6,4,-...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://yirufeng.top/notes/algo/89orgtxn/"}],["meta",{"property":"og:title","content":"栈"}],["meta",{"property":"og:description","content":"面试题：两个栈实现一个队列。 面试题：给一个出栈序列长度为 n，有多少种入栈的可能。 把数组元素按照正负序重排列 给定一个数组，数组它按照下面的规则重排列后的数组： 1. 数组中的正负数相互间隔 2. 符号相同的数字相对顺序不变 3. 如果某种符号的数字多余，放到数组最后 例如：-1,3,2,4,5,-6,7,-9 重排列后：3,-1,2,-6,4,-..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T13:36:39.000Z"}],["meta",{"property":"article:author","content":"yirufeng"}],["meta",{"property":"article:modified_time","content":"2024-05-13T13:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"栈\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-13T13:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yirufeng\\"}]}"]]},"headers":[{"level":2,"title":"面试题：两个栈实现一个队列。","slug":"面试题-两个栈实现一个队列。","link":"#面试题-两个栈实现一个队列。","children":[]},{"level":2,"title":"面试题：给一个出栈序列长度为 n，有多少种入栈的可能。","slug":"面试题-给一个出栈序列长度为-n-有多少种入栈的可能。","link":"#面试题-给一个出栈序列长度为-n-有多少种入栈的可能。","children":[]},{"level":2,"title":"把数组元素按照正负序重排列","slug":"把数组元素按照正负序重排列","link":"#把数组元素按照正负序重排列","children":[]}],"readingTime":{"minutes":0.77,"words":230},"git":{"updatedTime":1715607399000,"contributors":[{"name":"cvenwu","email":"yirufeng@foxmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"notes/algo/栈.md"}`);export{d as comp,m as data};
