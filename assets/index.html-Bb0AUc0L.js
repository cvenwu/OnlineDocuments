import{_ as e,o as a,c as t,d as n}from"./app-DFGfNfkv.js";const l={},s=n('<h2 id="dfs和bfs的区别" tabindex="-1"><a class="header-anchor" href="#dfs和bfs的区别"><span>dfs和bfs的区别</span></a></h2><h2 id="面试题-判断是否为完美二叉树" tabindex="-1"><a class="header-anchor" href="#面试题-判断是否为完美二叉树"><span>面试题：判断是否为完美二叉树</span></a></h2><h2 id="面试题-如何判断一棵树是否为bst" tabindex="-1"><a class="header-anchor" href="#面试题-如何判断一棵树是否为bst"><span>面试题：如何判断一棵树是否为BST？</span></a></h2><blockquote><p>二叉搜索树的定义：空树或者具有如下性质的二叉树，若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值； 它的左、右子树也分别为二叉排序树</p></blockquote><p>远程面试使用的是牛客网，线上IDE只有一个默认的 main 函数，然而面试官在给出题目的时候不像平时做题时给出一个要求的函数签名，所以我们要先写出树的数据结构，然后写函数（面试官有说入参是一个根节点），最后测试的时候要自己 new 一棵二叉树，虽然没花多少时间，但是第一次面试还是不太习惯Orz。</p><h2 id="面试题-求树的最大高度" tabindex="-1"><a class="header-anchor" href="#面试题-求树的最大高度"><span>面试题：求树的最大高度</span></a></h2><h2 id="面试题-判断二叉树是否对称-迭代" tabindex="-1"><a class="header-anchor" href="#面试题-判断二叉树是否对称-迭代"><span>面试题：判断二叉树是否对称(迭代)</span></a></h2><h2 id="面试题-给定一个二叉树-从根节点出发-按照前序遍历的顺序打印每个节点-最后回到根节点-比如" tabindex="-1"><a class="header-anchor" href="#面试题-给定一个二叉树-从根节点出发-按照前序遍历的顺序打印每个节点-最后回到根节点-比如"><span>面试题：给定一个二叉树，从根节点出发，按照前序遍历的顺序打印每个节点，最后回到根节点，比如</span></a></h2><h2 id="面试题-根据这个打印结果-把树给建立起来" tabindex="-1"><a class="header-anchor" href="#面试题-根据这个打印结果-把树给建立起来"><span>面试题：根据这个打印结果，把树给建立起来</span></a></h2><h2 id="面试题-二叉树中任意-3-个节点的最近公共祖先" tabindex="-1"><a class="header-anchor" href="#面试题-二叉树中任意-3-个节点的最近公共祖先"><span>面试题：二叉树中任意 3 个节点的最近公共祖先</span></a></h2><h2 id="面试题-avl树或者红黑树-插入和查找的细节" tabindex="-1"><a class="header-anchor" href="#面试题-avl树或者红黑树-插入和查找的细节"><span>面试题：AVL树或者红黑树 插入和查找的细节</span></a></h2><h2 id="面试题-红黑树与avl差别" tabindex="-1"><a class="header-anchor" href="#面试题-红黑树与avl差别"><span>面试题：红黑树与AVL差别</span></a></h2><h2 id="面试题-二叉树从根到叶子的路径总和是否存在指定的值" tabindex="-1"><a class="header-anchor" href="#面试题-二叉树从根到叶子的路径总和是否存在指定的值"><span>面试题：二叉树从根到叶子的路径总和是否存在指定的值</span></a></h2><h2 id="算法题-给定一个仅包含数字-0−9-的二叉树-每一条从根节点到叶子节点的路径都可以-用一个数字表示。" tabindex="-1"><a class="header-anchor" href="#算法题-给定一个仅包含数字-0−9-的二叉树-每一条从根节点到叶子节点的路径都可以-用一个数字表示。"><span>算法题： 给定一个仅包含数字 0−9 的二叉树，每一条从根节点到叶子节点的路径都可以 用一个数字表示。</span></a></h2><p>例如根节点到叶子节点的一条路径是 1→2→3 ,那么这条路径就用 123 来代替。</p><p>找出根节点到叶子节点的所有路径表示的数字之和</p><p>问了大概 25 分钟才做的算法题，做完了递归让非递归做一遍</p><h2 id="z-字型打印二叉树" tabindex="-1"><a class="header-anchor" href="#z-字型打印二叉树"><span>Z 字型打印二叉树</span></a></h2><h2 id="给定一个值-找出二叉树中从根节点到叶子节点的路径和等于那个值的路径" tabindex="-1"><a class="header-anchor" href="#给定一个值-找出二叉树中从根节点到叶子节点的路径和等于那个值的路径"><span>给定一个值，找出二叉树中从根节点到叶子节点的路径和等于那个值的路径</span></a></h2><h2 id="二叉树的右视图。" tabindex="-1"><a class="header-anchor" href="#二叉树的右视图。"><span>二叉树的右视图。</span></a></h2><h2 id="算法-用栈先序遍历二叉树" tabindex="-1"><a class="header-anchor" href="#算法-用栈先序遍历二叉树"><span>算法:用栈先序遍历二叉树</span></a></h2><h2 id="二叉树的左视图打印" tabindex="-1"><a class="header-anchor" href="#二叉树的左视图打印"><span>二叉树的左视图打印</span></a></h2><h2 id="面试题-红黑树-旋转" tabindex="-1"><a class="header-anchor" href="#面试题-红黑树-旋转"><span>面试题：红黑树/旋转</span></a></h2><h2 id="第一题-求二叉树的最长路径-路径指任意结点到结点之间的最短距离" tabindex="-1"><a class="header-anchor" href="#第一题-求二叉树的最长路径-路径指任意结点到结点之间的最短距离"><span>第一题：求二叉树的最长路径，路径指任意结点到结点之间的最短距离</span></a></h2><h2 id="求二叉树是否存在和为-n-的路径" tabindex="-1"><a class="header-anchor" href="#求二叉树是否存在和为-n-的路径"><span>求二叉树是否存在和为 N 的路径</span></a></h2><p>直接递归就行了，后来又要求路径不一定要到叶结点，稍微改一改也就行了……</p><p>复杂度 一开始直接就说 log(N)，当场去世……</p><p>面试官让我再考虑一下，发现是 O(N)，因为最糟的情况下每个结点都要访问一次</p>',28),i=[s];function r(h,d){return a(),t("div",null,i)}const o=e(l,[["render",r],["__file","index.html.vue"]]),p=JSON.parse(`{"path":"/notes/algo/s7ejjdt2/","title":"树","lang":"zh-CN","frontmatter":{"title":"树","author":"yirufeng","createTime":"2024/05/12 09:58:29","permalink":"/notes/algo/s7ejjdt2/","description":"dfs和bfs的区别 面试题：判断是否为完美二叉树 面试题：如何判断一棵树是否为BST？ 二叉搜索树的定义：空树或者具有如下性质的二叉树，若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值； 它的左、右子树也分别为二叉排序树 远程面试使用的是牛客网，线上IDE只有一个默认的 ma...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://yirufeng.top/notes/algo/s7ejjdt2/"}],["meta",{"property":"og:title","content":"树"}],["meta",{"property":"og:description","content":"dfs和bfs的区别 面试题：判断是否为完美二叉树 面试题：如何判断一棵树是否为BST？ 二叉搜索树的定义：空树或者具有如下性质的二叉树，若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值； 若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值； 它的左、右子树也分别为二叉排序树 远程面试使用的是牛客网，线上IDE只有一个默认的 ma..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-13T13:36:39.000Z"}],["meta",{"property":"article:author","content":"yirufeng"}],["meta",{"property":"article:modified_time","content":"2024-05-13T13:36:39.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"树\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-13T13:36:39.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yirufeng\\"}]}"]]},"headers":[{"level":2,"title":"dfs和bfs的区别","slug":"dfs和bfs的区别","link":"#dfs和bfs的区别","children":[]},{"level":2,"title":"面试题：判断是否为完美二叉树","slug":"面试题-判断是否为完美二叉树","link":"#面试题-判断是否为完美二叉树","children":[]},{"level":2,"title":"面试题：如何判断一棵树是否为BST？","slug":"面试题-如何判断一棵树是否为bst","link":"#面试题-如何判断一棵树是否为bst","children":[]},{"level":2,"title":"面试题：求树的最大高度","slug":"面试题-求树的最大高度","link":"#面试题-求树的最大高度","children":[]},{"level":2,"title":"面试题：判断二叉树是否对称(迭代)","slug":"面试题-判断二叉树是否对称-迭代","link":"#面试题-判断二叉树是否对称-迭代","children":[]},{"level":2,"title":"面试题：给定一个二叉树，从根节点出发，按照前序遍历的顺序打印每个节点，最后回到根节点，比如","slug":"面试题-给定一个二叉树-从根节点出发-按照前序遍历的顺序打印每个节点-最后回到根节点-比如","link":"#面试题-给定一个二叉树-从根节点出发-按照前序遍历的顺序打印每个节点-最后回到根节点-比如","children":[]},{"level":2,"title":"面试题：根据这个打印结果，把树给建立起来","slug":"面试题-根据这个打印结果-把树给建立起来","link":"#面试题-根据这个打印结果-把树给建立起来","children":[]},{"level":2,"title":"面试题：二叉树中任意 3 个节点的最近公共祖先","slug":"面试题-二叉树中任意-3-个节点的最近公共祖先","link":"#面试题-二叉树中任意-3-个节点的最近公共祖先","children":[]},{"level":2,"title":"面试题：AVL树或者红黑树 插入和查找的细节","slug":"面试题-avl树或者红黑树-插入和查找的细节","link":"#面试题-avl树或者红黑树-插入和查找的细节","children":[]},{"level":2,"title":"面试题：红黑树与AVL差别","slug":"面试题-红黑树与avl差别","link":"#面试题-红黑树与avl差别","children":[]},{"level":2,"title":"面试题：二叉树从根到叶子的路径总和是否存在指定的值","slug":"面试题-二叉树从根到叶子的路径总和是否存在指定的值","link":"#面试题-二叉树从根到叶子的路径总和是否存在指定的值","children":[]},{"level":2,"title":"算法题： 给定一个仅包含数字 0−9 的二叉树，每一条从根节点到叶子节点的路径都可以 用一个数字表示。","slug":"算法题-给定一个仅包含数字-0−9-的二叉树-每一条从根节点到叶子节点的路径都可以-用一个数字表示。","link":"#算法题-给定一个仅包含数字-0−9-的二叉树-每一条从根节点到叶子节点的路径都可以-用一个数字表示。","children":[]},{"level":2,"title":"Z 字型打印二叉树","slug":"z-字型打印二叉树","link":"#z-字型打印二叉树","children":[]},{"level":2,"title":"给定一个值，找出二叉树中从根节点到叶子节点的路径和等于那个值的路径","slug":"给定一个值-找出二叉树中从根节点到叶子节点的路径和等于那个值的路径","link":"#给定一个值-找出二叉树中从根节点到叶子节点的路径和等于那个值的路径","children":[]},{"level":2,"title":"二叉树的右视图。","slug":"二叉树的右视图。","link":"#二叉树的右视图。","children":[]},{"level":2,"title":"算法:用栈先序遍历二叉树","slug":"算法-用栈先序遍历二叉树","link":"#算法-用栈先序遍历二叉树","children":[]},{"level":2,"title":"二叉树的左视图打印","slug":"二叉树的左视图打印","link":"#二叉树的左视图打印","children":[]},{"level":2,"title":"面试题：红黑树/旋转","slug":"面试题-红黑树-旋转","link":"#面试题-红黑树-旋转","children":[]},{"level":2,"title":"第一题：求二叉树的最长路径，路径指任意结点到结点之间的最短距离","slug":"第一题-求二叉树的最长路径-路径指任意结点到结点之间的最短距离","link":"#第一题-求二叉树的最长路径-路径指任意结点到结点之间的最短距离","children":[]},{"level":2,"title":"求二叉树是否存在和为 N 的路径","slug":"求二叉树是否存在和为-n-的路径","link":"#求二叉树是否存在和为-n-的路径","children":[]}],"readingTime":{"minutes":2.46,"words":738},"git":{"updatedTime":1715607399000,"contributors":[{"name":"cvenwu","email":"yirufeng@foxmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"notes/algo/树.md"}`);export{o as comp,p as data};
