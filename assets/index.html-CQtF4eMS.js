import{_ as t,o as a,c as d,d as s,a as e,e as i}from"./app-DFGfNfkv.js";const l={},n=s('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><p>很多人了解Redis主要从数据结构着手，其实日常工作中我们使用的都是Redis对象的操作命令，包括字符串对象、列表对象、哈希对象、集合对象和有序集合对象这五种类型的对象。每一种对象底层对应了多种不同数据结构</p><ul><li>Redis并没有直接使用数据结构来实现键值对数据库，而是基于数据结构创建了一个对象系统，这个系统包含字符串对象、列表对象、哈希对象、集合对象和有序集合对象这五种类型的对象，每种对象都用到了多种数据结构。通过这五种不同类型的对象，Redis可以在执行命令之前，根据对象的类型来判断一个对象是否可以执行给定的命令。使用对象的另一个好处是，可以针对不同的使用场景，为对象设置多种不同的数据结构实现，从而优化对象在不同场景下的使用效率。</li><li>Redis的对象系统还实现了基于引用计数技术的内存回收机制，当程序不再使用某个对象的时候，这个对象所占用的内存就会被自动释放；</li><li>Redis还通过引用计数技术实现了对象共享机制，这一机制可以在适当的条件下，通过让多个数据库键共享同一个对象来节约内存。</li><li>Redis的对象带有访问时间记录信息，该信息可以用于计算数据库键的空转时长，在服务器启用了maxmemory功能的情况下，空转时长较大的那些键可能会优先被服务器删除。</li></ul><h2 id="redis对象系统介绍" tabindex="-1"><a class="header-anchor" href="#redis对象系统介绍"><span>Redis对象系统介绍</span></a></h2><blockquote><p>对于Redis数据库保存的键值对来说，键总是一个字符串对象，而值则可以是字符串对象、列表对象、哈希对象、集合对象或者有序集合对象的其中一种。 Redis使用对象来表示数据库中的键和值，每次当我们在Redis的数据库中新创建一个键值对时，我们至少会创建两个对象，一个对象用作键值对的键（键对象），另一个对象用作键值对的值（值对象）。</p></blockquote>',5),r=e("div",{class:"language-c++ line-numbers-mode","data-ext":"c++","data-title":"c++"},[e("pre",{class:"shiki shiki-themes vitesse-light vitesse-dark vp-code","v-pre":""},[e("code",null,[e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#1E754F","--shiki-dark":"#4D9375"}},"typedef"),e("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," struct"),e("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," redisObject"),e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}}," {")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"    // 对象类型")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"    unsigned"),e("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," type:"),e("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"4"),e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"    // 对象编码")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"    unsigned"),e("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}}," encoding:"),e("span",{style:{"--shiki-light":"#2F798A","--shiki-dark":"#4C9A91"}},"4"),e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"    // 指向底层实现数据结构的指针")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}},"    void"),e("span",{style:{"--shiki-light":"#AB5959","--shiki-dark":"#CB7676"}}," *"),e("span",{style:{"--shiki-light":"#393A34","--shiki-dark":"#DBD7CAEE"}},"ptr"),e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#A0ADA0","--shiki-dark":"#758575DD"}},"    // ...")]),i(`
`),e("span",{class:"line"},[e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},"}"),e("span",{style:{"--shiki-light":"#2E8F82","--shiki-dark":"#5DA994"}}," robj"),e("span",{style:{"--shiki-light":"#999999","--shiki-dark":"#666666"}},";")])])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),c=s('<p><strong>对象详解</strong></p><blockquote><p>Redis中的每个对象都由一个redisObject结构表示，该结构中和保存数据有关的三个属性分别是type属性、encoding属性和ptr属性：</p></blockquote><ul><li>type属性记录了对象的类型，可以是如下类型（<code>REDIS_STRING</code>、<code>REDIS_LIST</code>、<code>REDIS_HASH</code>、<code>REDIS_SET</code>、<code>REDIS_ZSET</code>）中的一种。<code>TYPE</code>命令返回数据库键对应的值对象的类型</li><li>ptr指针指向对象的底层实现数据结构，而这些数据结构由对象的encoding属性决定。</li><li>encoding属性记录了对象所使用的编码，也即是说这个对象使用了什么数据结构作为对象的底层实现，这个属性的值可以是<code>REDIS_ENCODING_INT</code>、<code>REDIS_ENCODING_EMBSTR</code>、<code>REDIS_ENCODING_RAW</code>、<code>REDIS_ENCODING_HT</code>、<code>REDIS_ENCODING_LINKEDLIST</code>、<code>REDIS_ENCODING_ZIPLIST</code>、<code>REDIS_ENCODING_INTSET</code>、<code>REDIS_ENCODING_SKIPLIST</code>的其中一个</li></ul><table><thead><tr><th>Syntax</th><th>Description</th></tr></thead><tbody><tr><td>Header</td><td>Title</td></tr><tr><td>Paragraph</td><td>Text</td></tr></tbody></table><p>123 每一个Redis数据结构都是有雨</p><p>● 当我们称呼一个数据库键为“字符串键”时，我们指的是“这个数据库键所对应的值为字符串对象”； ● 当我们称呼一个键为“列表键”时，我们指的是“这个数据库键所对应的值为列表对象” ● TYPE命令的实现方式也与此类似，当我们对一个数据库键执行TYPE命令时，命令返回的结果为数据库键对应的值对象的类型，而不是键对象的类型：</p><p>对象类型有5种，但是底层数据结构（内部编码）对应8种 。</p><hr><h2 id="redis主要数据结构一览" tabindex="-1"><a class="header-anchor" href="#redis主要数据结构一览"><span>Redis主要数据结构一览</span></a></h2><ul><li>简单动态字符串（SDS）</li><li>双端链表</li><li>字典</li><li>压缩列表</li><li>数据集合</li></ul><h2 id="数据结构具体实现" tabindex="-1"><a class="header-anchor" href="#数据结构具体实现"><span>数据结构具体实现</span></a></h2>',11),o=[n,r,c];function h(p,k){return a(),d("div",null,o)}const g=t(l,[["render",h],["__file","index.html.vue"]]),u=JSON.parse(`{"path":"/article/wyj6yhxt/","title":"（Redis系列第二篇）Redis数据结构一览","lang":"zh-CN","frontmatter":{"title":"（Redis系列第二篇）Redis数据结构一览","author":"yirufeng","createTime":"2024/05/12 09:58:29","tags":["Redis","Redis系列"],"permalink":"/article/wyj6yhxt/","description":"背景 很多人了解Redis主要从数据结构着手，其实日常工作中我们使用的都是Redis对象的操作命令，包括字符串对象、列表对象、哈希对象、集合对象和有序集合对象这五种类型的对象。每一种对象底层对应了多种不同数据结构 Redis并没有直接使用数据结构来实现键值对数据库，而是基于数据结构创建了一个对象系统，这个系统包含字符串对象、列表对象、哈希对象、集合对象...","head":[["script",{"id":"check-dark-mode"},";(function () {const um= localStorage.getItem('vuepress-theme-appearance') || 'auto';const sm = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;if (um === 'dark' || (um !== 'light' && sm)) {document.documentElement.classList.add('dark');}})();"],["script",{"id":"check-mac-os"},"document.documentElement.classList.toggle('mac', /Mac|iPhone|iPod|iPad/i.test(navigator.platform))"],["meta",{"property":"og:url","content":"https://yirufeng.top/article/wyj6yhxt/"}],["meta",{"property":"og:title","content":"（Redis系列第二篇）Redis数据结构一览"}],["meta",{"property":"og:description","content":"背景 很多人了解Redis主要从数据结构着手，其实日常工作中我们使用的都是Redis对象的操作命令，包括字符串对象、列表对象、哈希对象、集合对象和有序集合对象这五种类型的对象。每一种对象底层对应了多种不同数据结构 Redis并没有直接使用数据结构来实现键值对数据库，而是基于数据结构创建了一个对象系统，这个系统包含字符串对象、列表对象、哈希对象、集合对象..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-12T07:00:26.000Z"}],["meta",{"property":"article:author","content":"yirufeng"}],["meta",{"property":"article:tag","content":"Redis"}],["meta",{"property":"article:tag","content":"Redis系列"}],["meta",{"property":"article:modified_time","content":"2024-05-12T07:00:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"（Redis系列第二篇）Redis数据结构一览\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-12T07:00:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"yirufeng\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"Redis对象系统介绍","slug":"redis对象系统介绍","link":"#redis对象系统介绍","children":[]},{"level":2,"title":"Redis主要数据结构一览","slug":"redis主要数据结构一览","link":"#redis主要数据结构一览","children":[]},{"level":2,"title":"数据结构具体实现","slug":"数据结构具体实现","link":"#数据结构具体实现","children":[]}],"isBlogPost":true,"readingTime":{"minutes":3.57,"words":1072},"git":{"updatedTime":1715497226000,"contributors":[{"name":"cvenwu","email":"yirufeng@foxmail.com","commits":2}]},"autoDesc":true,"filePathRelative":"blog/posts/Redis数据结构一览.md","categoryList":[{"type":10000,"name":"blog"},{"type":10001,"name":"posts"}]}`);export{g as comp,u as data};
